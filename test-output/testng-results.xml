<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-03T20:05:20 AFT" name="Suite" finished-at="2024-10-03T20:06:14 AFT" duration-ms="54552">
    <groups>
    </groups>
    <test started-at="2024-10-03T20:05:20 AFT" name="Test" finished-at="2024-10-03T20:06:14 AFT" duration-ms="54552">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTest@2ea6e30c]" started-at="2024-10-03T20:05:43 AFT" name="openApplication" finished-at="2024-10-03T20:05:55 AFT" duration-ms="12815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@2ea6e30c]" started-at="2024-10-03T20:05:55 AFT" name="login" data-provider="getLoginData" finished-at="2024-10-03T20:05:59 AFT" duration-ms="4008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ahmad@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Successful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.LoginTest@2ea6e30c]" started-at="2024-10-03T20:05:59 AFT" name="closure" finished-at="2024-10-03T20:06:00 AFT" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTest@2ea6e30c]" started-at="2024-10-03T20:06:00 AFT" name="openApplication" finished-at="2024-10-03T20:06:12 AFT" duration-ms="12651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@2ea6e30c]" started-at="2024-10-03T20:06:12 AFT" name="login" data-provider="getLoginData" finished-at="2024-10-03T20:06:14 AFT" duration-ms="1703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dummy@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dummy@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.LoginTest@2ea6e30c]" started-at="2024-10-03T20:06:14 AFT" name="closure" finished-at="2024-10-03T20:06:14 AFT" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.FourTest">
        <test-method signature="testFour()[pri:0, instance:tests.FourTest@1b955cac]" started-at="2024-10-03T20:05:20 AFT" name="testFour" finished-at="2024-10-03T20:05:42 AFT" duration-ms="22339" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.FourTest.testFour(FourTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFour -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.FourTest@1b955cac]" started-at="2024-10-03T20:05:42 AFT" name="closure" finished-at="2024-10-03T20:05:43 AFT" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.FourTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
